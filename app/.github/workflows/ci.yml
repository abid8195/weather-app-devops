name: ci

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches: [ develop ]

jobs:
  lint-and-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Minimal sanity checks for a static site; no Node build required
      - name: Verify required files exist
        run: |
          test -f index.html || test -f app/index.html
          test -f script.js || test -f app/script.js
          test -f styles.css || test -f app/styles.css
          echo "Required files found (root or app/)."

      - name: Check for insecure HTTP icon URLs
        run: |
          # Search inside app/ to avoid matching workflow files
          if grep -R "http://openweathermap.org" -n --include="*.html" --include="*.js" app/ --exclude-dir=.github; then
            echo "Found http:// references (mixed-content risk). Use https://openweathermap.org/img/wn/..."
            exit 1
          else
            echo "No insecure icon references."
          fi

      - name: Make site directory
        run: |
          mkdir -p site
          shopt -s globstar nullglob
          cp -r app/index.html app/styles.css app/script.js app/images site/ 2>/dev/null || true

      - name: Upload artifact (site)
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-package
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t weather-app:ci .

      - name: Run container for smoke test
        run: |
          docker run -d --name weather-app-ci -p 8080:80 weather-app:ci
          sleep 2
          curl -fsS http://localhost:8080/ || (docker logs weather-app-ci && exit 1)

      - name: Stop container
        if: always()
        run: |
          docker rm -f weather-app-ci || true
